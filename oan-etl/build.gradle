plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
}

group = 'org.jacksonlaboratory'
version = '0.1'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("info.picocli:picocli-codegen")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    implementation("info.picocli:picocli")
    implementation("io.micronaut.picocli:micronaut-picocli")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.neo4j:micronaut-neo4j-bolt")
    implementation("org.monarchinitiative.phenol:phenol-core:2.0.3"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation("org.monarchinitiative.phenol:phenol-io:2.0.3"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation("org.monarchinitiative.phenol:phenol-annotations:2.0.3"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.neo4j.test:neo4j-harness")
    testRuntimeOnly("javax.validation:validation-api:2.0.1.Final")
    testRuntimeOnly("javax.annotation:javax.annotation-api:1.3.2")
    testRuntimeOnly('javax.ws.rs:javax.ws.rs-api:2.1.1')
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation('org.junit.jupiter:junit-jupiter')
}

application {
    mainClass.set("org.jacksonlaboratory.GraphCommand")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.jacksonlaboratory.*")
    }
}
